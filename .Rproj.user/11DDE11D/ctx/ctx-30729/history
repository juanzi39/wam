data()
write.csv(iris)
iris
iris
sample_iris=sample(150,110,replace=FALSE)
iris_training=iris[sample_iris,]
str(iris)
data()
iris_test=iris[-sample_iris,]
iris_training_labels=iris[sample_iris,]$class
iris_test_labels=iris[-sample_iris,]$class
table(iris_training$class)
table(iris_test$class)
library(e1071)
install.packages("e1071")
library(e1071)
install.packages("e1071")
library(e1071)
library(e1071)
library(e1071)
iris_classifier=naiveBayes(iris_training,iris_training_labels)
library(e1071)
iris_classifier=naiveBayes(iris_training,iris_training_labels)
iris_test_pred=predict(iris_classifier,iris_test)
library(e1071)
data()
write.csv(iris)
iris
data(iris)
head(iris)
conlnames(iris)[1:5]=c("sepal_length","sepal_width","petal_length","petal_width","class")
conlnames(iris)[1:5]=c("sepal_length","sepal_width","petal_length","petal_width","class")
colnames(iris)[1:5]=c("sepal_length","sepal_width","petal_length","petal_width","class")
iris_test_pred=predict(iris_classifier,iris_test)
colnames(iris)[1:5]=c("sepal_length","sepal_width","petal_length","petal_width","class")
iris$class=factor(iris$class)
str(iris)
sample_iris=sample(150,110,replace=FALSE)
sample_iris
iris_training=iris[sample_iris,]
iris_test=iris[-sample_iris,]
iris_training_labels=iris[sample_iris,]$class
iris_test_labels=iris[-sample_iris,]$class
table(iris_training$class)
table(iris_test$class)
library(e1071)
iris_classifier=naiveBayes(iris_training,iris_training_labels)
iris_test_pred=predict(iris_classifier,iris_test)
CrossTable(iris_test_pred,iris_test_labels,prop.chisq=FALSE,prop.t=FALSE,
prop.r=FALSE,dnn=c('predicted','actual'))
install.packages("gmodels")
CrossTable(iris_test_pred,iris_test_labels,prop.chisq=FALSE,prop.t=FALSE,
prop.r=FALSE,dnn=c('predicted','actual'))
library(gmodels)
install.packages("gtools")
install.packages("gdata")
install.packages("gmodels")
library(gmodels)
CrossTable(iris_test_pred,iris_test_labels,prop.chisq=FALSE,prop.t=FALSE,
prop.r=FALSE,dnn=c('predicted','actual'))
iris_classifier2=naiveBayes(iris_training,iris_training_labels,laplace=1)
iris_test_pred2=predict(iris_classifier2,iris_test)
iris_test_pred2
data(iris)
head(iris)
colnames(iris)[1:5]=c("sepal_length","sepal_width","petal_length","petal_width","class")
iris$class=factor(iris$class)
str(iris)
sample_iris=sample(150,110,replace=FALSE)
sample_iris
data(iris)
head(iris)
colnames(iris)[1:5]=c("sepal_length","sepal_width","petal_length","petal_width","class")
iris$class=factor(iris$class)
str(iris)
iris$class=factor(iris$class)
str(iris)
sample_iris=sample(150,110,replace=FALSE)
sample_iris
iris_test_pred2
CrossTable(iris_test_pred2,iris_test_labels,prop.chisq=FALSE,prop.t=FALSE,
prop.r=FALSE,dnn=c('predicted','actual'))
setwd("~生态学文件夹/生态学")
myData<-iris[,1:4]
cor(x=myData[,Spentall.ength],y=myData[,"SpentalWidth"],
use="everything",method="pearson")
x=sqrt(16)
sqrt(16)
x=sqrt(16)
x
a=10
a
a<
a<-10
a<-10
a<-11
a
a=a+1
a
b=a*a
b
x=sqrt(b)
x
a=c(4,2,5,10)
a
a=1:4
a
a=seq(1,10)
a
a<5
a==2
a=1:10
a<6
A=matrix(data=0,nrow=6,ncol=5)
A
rcal<-function(x,y)
{
x<-x^2+y^2;
result<-sqrt(z);
result;
}
rcal
rcal(3,4)
z<-x^2+y^2;
rcal<-function(x,y)
{
z<-x^2+y^2;
result<-sqrt(z);
result;
}
rcal(3,4)
z3
sqtest<-function(x.y)
{
z1=x^2;
z2=y^2;
z3=z1+z2;
z3
}
a<-c(1,2,5,3,6,-2,4)
a
y<-matrix(1:20,nrow=5,ncol=4)
y
patientID<-c(1,2,3,4)
diabetes<-c("Type 1","Type 2","Type 1","Type 2")
patientID<-c(1,2,3,4)
age<-c(25,34,28,52)
diabetes<-c("Type 1","Type 2","Type 1","Type 2")
status<-c("poor","improved","excellent","poor")
patientdata<-data.frame(patientID,age,diabets,status)
patientdata<-data.frame(patientID,age,diabetes,status)
patientdata
H<-c(1.75,1.80,1.65,1.90,1.74,1.91)
sq.H<-H^2
S<-(60,72,57,90,95,72)
S<-c(60,72,57,90,95,72)
Ratio<-S/sq.H
t.test(Ratio,mu=22.5)
data（insectsprays）
data（）
data（）
data()
data("InsectSprays")
boxplot(day-type,data=bac,col="red"，xlab="Virus",ylab="days")
boxplot(count-spray,
data=InsectSprays)
boxplot(count-spray,
data=InsectSprays)
data("InsectSprays")
boxplot(count-spray,
data=InsectSprays)
boxplot(count~spray,
data=InsectSprays)
boxplot(count-spray,
data=InsectSprays)
install.packages("rattle")
install.packages("rattle.data")
x<-runif(50,0,2)
y<-runif(50,0,2)
plot(x,y,main="散点图"，xlab="横坐标"，ylab="纵坐标")
plot(x,y,main="散点图",xlab="横坐标",ylab="纵坐标")
text(0.6,0.6,"text at(0.6,0.6)")
abline(h=.6,v=.6)
abline(h=0.6,v=0.6)
abline(h=1,v=0.6)
library(rattle)
rattle()
install.packages("RGtk2")
library(rattle)
rattle()
install.packages("RGtk2")
install.packages("rattle")
library(rattle)
rattle()
install.packages("RGtk2")
options(repos = c(
CRAN = 'https://cran.rstudio.com',
CRANextra = 'https://macos.rbind.io'
))
install.packages(c('cairoDevice', 'RGtk2'))
install.packages("RGtk2")
rattle()
rattle()
rattle()
install.packages("rattle")
install.packages("RGtk2")
options(repos = c(
CRAN = 'https://cran.rstudio.com',
CRANextra = 'https://macos.rbind.io'
))
install.packages(c('cairoDevice', 'RGtk2'))
install.packages(c('cairoDevice', 'RGtk2'))
options(repos = c(
CRAN = 'https://cran.rstudio.com',
CRANextra = 'https://macos.rbind.io'
))
install.packages(c('cairoDevice', 'RGtk2'))
rattle()
library(rattle)
rattle()
library(rattle)
rattle()
x<-rnorm(100)
y<-rnorm(100)
z<-rnorm(100)
df<-data.frame(x,y,z)
install.packages("bitops")
df<-data.frame(x,y,z)
df<-data.frame(x,y,z)
iris
data(iris)
mydata<-data(iris)
